# Gitlab-CI Workflow
# stages:
#   build:
#     - Runs on commits on master or tags that match the pattern "v[0-9]+\.[0-9]+.*$". (e.g. 1.0, v2.1rc1)
#   deploy-staging:
#     - Runs on commits on master or tags that match the pattern "v[0-9]+\.[0-9]+.*$" (continues deployment)
#   deploy-production:
#     - Runs on tags that match the pattern "v[0-9]+\.[0-9]+.*$" (manual deployment)

variables:
  # Build Variables (Mandatory)
  CONTAINER_REPO:             "docker.io/paritytech/substrate-runtime-exporter"        # format: docker.io/user/repo"
  DOCKERFILE_DIRECTORY:       "./"        # directory that contains the Dockerfile (e.g. ./)

  # Deploy Variables (Mandatory)
  #CONTAINER_REPO:            ""        # It's already been defined in "Build variables" and only been mentioned for documentation purposes.
  HELM_NAMESPACE:             "runtime-exporter"        # the namespace that the helm chart would be installed
  HELM_RELEASE_NAME:          "runtime-exporter"        # helm release name
  HELM_CHART:                 "parity/substrate-runtime-exporter" # path to the helm chart, either local or remote (e.g. ./ or HELM_REPO_NAME/chart)
  HELM_VALUES:                 "./deploy"

  # Manual Variables (Optional)
  ## Could be used in the web console when triggering the pipeline manually
  ## DO NOT SET THEM IN THIS FILE!! They've been mentioned here only for documentation purposes!
  # FORCE_DEPLOY:               ""        # boolean: true or false - triggers the deploy-production stage
  # FORCE_DOCKER_TAG:           ""        # choose an existing docker tag to be deployed (e.g. v1.2.3)

default:
  before_script:
    - |-
      echo defining DOCKER_IMAGE_TAG variable
      if [[ $FORCE_DOCKER_TAG ]]; then
        export DOCKER_IMAGE_TAG="${FORCE_DOCKER_TAG}"
      elif [[ $CI_COMMIT_TAG =~ ^v[0-9]+\.[0-9]+.*$ ]]; then
        export DOCKER_IMAGE_TAG="${CI_COMMIT_TAG}"
        export BUILD_LATEST_IMAGE="true"
      else
        export DOCKER_IMAGE_TAG="${CI_COMMIT_SHORT_SHA}-beta"
      fi

stages:
  - build
  - deploy-westend
  - deploy-kusama
  - deploy-polkadot


# Pipeline Job Templates:
.dockerize:               &dockerize
  stage:                  build
  image:                  quay.io/buildah/stable
  script:
    - |-
      echo building "$CONTAINER_REPO:$DOCKER_IMAGE_TAG"
      if [[ $BUILD_LATEST_IMAGE ]]; then
        buildah bud \
        --format=docker \
        --tag "$CONTAINER_REPO:$DOCKER_IMAGE_TAG" \
        --tag "$CONTAINER_REPO:latest" "$DOCKERFILE_DIRECTORY"
      else
        buildah bud \
        --format=docker \
        --tag "$CONTAINER_REPO:$DOCKER_IMAGE_TAG" "$DOCKERFILE_DIRECTORY"
      fi
    - echo ${Docker_Hub_Pass_Parity} |
      buildah login --username ${Docker_Hub_User_Parity} --password-stdin docker.io
    - |-
      echo pushing "$CONTAINER_REPO:$DOCKER_IMAGE_TAG"
      if [[ $BUILD_LATEST_IMAGE ]]; then
        buildah push --format=v2s2 "$CONTAINER_REPO:$DOCKER_IMAGE_TAG"
        buildah push --format=v2s2 "$CONTAINER_REPO:latest"
      else
        buildah push --format=v2s2 "$CONTAINER_REPO:$DOCKER_IMAGE_TAG"
      fi
  rules:
    - if: '$FORCE_DOCKER_TAG'
      when: never
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+.*$/'         # i.e. v1.0, v2.1rc1
      when: always
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: always
  tags:
    - kubernetes-parity-build

.deploy:                  &deploy
  image:                  paritytech/kubetools:3.5.3
  script:
    - echo installing the helm chart
    - helm repo add parity https://paritytech.github.io/helm-charts/
    - helm upgrade
      --install
      --atomic
      --timeout 300s
      --namespace $HELM_NAMESPACE
      --values ${HELM_VALUES}/${CHAIN}-values.yaml
      --set image.repository="${CONTAINER_REPO}"
      --set image.tag="${DOCKER_IMAGE_TAG}"
      ${CHAIN}-${HELM_RELEASE_NAME} ${HELM_CHART}
  tags:
    - kubernetes-parity-build


# Pipeline Jobs:
build:
  <<:                     *dockerize

deploy-westend:
  <<:                     *deploy
  stage:                  deploy-westend
  environment:
    name:                 parity-stg
  variables:
    CHAIN: westend
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

deploy-kusama:
  <<:                     *deploy
  stage:                  deploy-kusama
  environment:
    name:                 parity-chains
  variables:
    CHAIN: kusama
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+.*$/'       # i.e. v1.0, v2.1rc1
    - if: '$FORCE_DEPLOY == "true"'
      when: manual

deploy-polkadot:
  <<:                     *deploy
  stage:                  deploy-polkadot
  environment:
    name:                 parity-chains
  variables:
    CHAIN: polkadot
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+.*$/'       # i.e. v1.0, v2.1rc1
    - if: '$FORCE_DEPLOY == "true"'
      when: manual
